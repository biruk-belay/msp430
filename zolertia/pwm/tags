!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BIN	Makefile	/^BIN = $(BINARY_HEX:.ihex=.ihex.out)$/;"	m
BINARY	Makefile	/^BINARY = first$/;"	m
BINARY_HEX	Makefile	/^BINARY_HEX = first.ihex$/;"	m
BLUE_LED	include/blink.h	9;"	d
BRIGHTEN	src/pwm.c	7;"	d	file:
CAR_RETURN	src/printf.c	5;"	d	file:
CC	Makefile	/^CC = msp430-gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -mmcu=$(board)$/;"	m
CPY_FLAG	Makefile	/^CPY_FLAG = --output-target=ihex$/;"	m
DIM	src/pwm.c	6;"	d	file:
GREEN_LED	include/blink.h	8;"	d
INSTALL	Makefile	/^INSTALL = tos-bsl$/;"	m
INSTALL_FLAG	Makefile	/^INSTALL_FLAG = -c \/dev\/ttyUSB0 -r -e -I -p $/;"	m
INSTALL_TRGT	Makefile	/^INSTALL_TRGT := --z1$/;"	m
LINE_FEED	src/printf.c	4;"	d	file:
MAX_BRIGHTNESS	src/pwm.c	10;"	d	file:
MIN_BRIGHTNESS	src/pwm.c	9;"	d	file:
NULL	src/uart.c	4;"	d	file:
OBJ_CPY	Makefile	/^OBJ_CPY = msp430-objcopy$/;"	m
PIN_1	include/blink.h	10;"	d
RED_LED	include/blink.h	7;"	d
SRC	Makefile	/^SRC = $(CURDIR)\/src\/*$/;"	m
STEP	src/pwm.c	11;"	d	file:
SWInt	src/printf.c	/^    void SWInt(int num)$/;"	f
SWString	src/printf.c	/^void SWString(unsigned char * string)$/;"	f
SWUInt	src/printf.c	/^void SWUInt(unsigned int dataword)$/;"	f
TEMP_VAR	Makefile	/^TEMP_VAR ?= $(INSTALL_TRGT)$/;"	m
Timer_A0	src/pwm.c	/^__interrupt void Timer_A0(void)$/;"	f
Timer_A1	src/pwm.c	/^__interrupt void Timer_A1(void){$/;"	f
board	Makefile	/^board = msp430f1611 $/;"	m
board	Makefile	/^board = msp430f2617$/;"	m
change_led	src/pwm.c	/^void change_led()$/;"	f
delay	src/blink.c	/^void delay () $/;"	f
init_gpio	src/blink.c	/^void init_gpio()$/;"	f
init_mcu	src/pwm.c	/^void init_mcu()$/;"	f
init_uart	src/uart.c	/^void init_uart ()$/;"	f
led_off	src/blink.c	/^void led_off (int led) $/;"	f
led_on	src/blink.c	/^void led_on(int led) $/;"	f
led_toggle	src/blink.c	/^void led_toggle (int led) $/;"	f
main	src/main.c	/^void main(void)$/;"	f
mode	src/pwm.c	/^uint16_t mode = DIM;$/;"	v
printf_x	src/printf.c	/^void printf_x(const unsigned char *format, ...)$/;"	f
temp	src/pwm.c	/^uint16_t temp;$/;"	v
uart_read	src/uart.c	/^unsigned char uart_read ()$/;"	f
uart_send	src/uart.c	/^void uart_send(unsigned char val) $/;"	f
uart_send_text	src/uart.c	/^void uart_send_text(unsigned char *ptr)$/;"	f
